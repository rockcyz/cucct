// Knowledge Graph Visualization with D3.js
const knowledgeData = {
    nodes: [
        {id: "计算思维概论", level: 0, color: "#6366f1", size: 25},
        {id: "第1章 信息的存储与表示", level: 1, color: "#8b5cf6", size: 18},
        {id: "1-0 课程简介", level: 2, color: "#c084fc", size: 14},
        {id: "计算思维的概念", level: 3, color: "#e9d5ff", size: 10},
        {id: "1-1 信息存储和表示的基础", level: 2, color: "#c084fc", size: 14},
        {id: "计算机硬件", level: 3, color: "#e9d5ff", size: 10},
        {id: "冯诺依曼结构", level: 4, color: "#f3e8ff", size: 8},
        {id: "输入设备", level: 5, color: "#faf5ff", size: 6},
        {id: "输出设备", level: 5, color: "#faf5ff", size: 6},
        {id: "控制器", level: 5, color: "#faf5ff", size: 6},
        {id: "运算器", level: 5, color: "#faf5ff", size: 6},
        {id: "存储器", level: 5, color: "#faf5ff", size: 6},
        {id: "计算机软件", level: 3, color: "#e9d5ff", size: 10},
        {id: "操作系统", level: 4, color: "#f3e8ff", size: 8},
        {id: "设备驱动程序", level: 4, color: "#f3e8ff", size: 8},
        {id: "应用软件", level: 4, color: "#f3e8ff", size: 8},
        {id: "二进制", level: 3, color: "#e9d5ff", size: 10},
        {id: "二进制的概念", level: 4, color: "#f3e8ff", size: 8},
        {id: "进制转换", level: 4, color: "#f3e8ff", size: 8},
        {id: "十进制", level: 5, color: "#faf5ff", size: 6},
        {id: "十六进制", level: 5, color: "#faf5ff", size: 6},
        {id: "1-2 数值的表示", level: 2, color: "#c084fc", size: 14},
        {id: "原码表示法", level: 3, color: "#e9d5ff", size: 10},
        {id: "补码", level: 3, color: "#e9d5ff", size: 10},
        {id: "1-3 文本的表示", level: 2, color: "#c084fc", size: 14},
        {id: "为什么要进行字符编码", level: 3, color: "#e9d5ff", size: 10},
        {id: "ASCII", level: 3, color: "#e9d5ff", size: 10},
        {id: "扩展ASCII", level: 3, color: "#e9d5ff", size: 10},
        {id: "GBK字符集及编码方式", level: 3, color: "#e9d5ff", size: 10},
        {id: "Unicode编码与UTF-8", level: 3, color: "#e9d5ff", size: 10},
        {id: "1-4 音频的表示", level: 2, color: "#c084fc", size: 14},
        {id: "模拟信号", level: 3, color: "#e9d5ff", size: 10},
        {id: "数字信号", level: 3, color: "#e9d5ff", size: 10},
        {id: "模拟信号到数字信号的转换", level: 3, color: "#e9d5ff", size: 10},
        {id: "音频编码与压缩", level: 3, color: "#e9d5ff", size: 10},
        {id: "1-5 图像的表示", level: 2, color: "#c084fc", size: 14},
        {id: "图像的数字化", level: 3, color: "#e9d5ff", size: 10},
        {id: "图像的颜色", level: 3, color: "#e9d5ff", size: 10},
        {id: "单色图像", level: 4, color: "#f3e8ff", size: 8},
        {id: "灰度图像", level: 4, color: "#f3e8ff", size: 8},
        {id: "彩色图像", level: 4, color: "#f3e8ff", size: 8},
        {id: "图像编码", level: 3, color: "#e9d5ff", size: 10},
        {id: "常见的图像格式", level: 3, color: "#e9d5ff", size: 10},
        {id: "1-6 视频的表示", level: 2, color: "#c084fc", size: 14},
        {id: "视频与图像的不同", level: 3, color: "#e9d5ff", size: 10},
        {id: "视频编码", level: 3, color: "#e9d5ff", size: 10},
        {id: "第2章 计算设备处理信息", level: 1, color: "#ec4899", size: 18},
        {id: "2-1 编程语言是什么", level: 2, color: "#f472b6", size: 14},
        {id: "为什么需要编程语言", level: 3, color: "#fbcfe8", size: 10},
        {id: "什么是编程语言", level: 3, color: "#fbcfe8", size: 10},
        {id: "编程语言的概念", level: 4, color: "#fdf2f8", size: 8},
        {id: "语法", level: 4, color: "#fdf2f8", size: 8},
        {id: "语义", level: 4, color: "#fdf2f8", size: 8},
        {id: "编程语言的历史", level: 3, color: "#fbcfe8", size: 10},
        {id: "早期历史", level: 4, color: "#fdf2f8", size: 8},
        {id: "第一批编程语言", level: 4, color: "#fdf2f8", size: 8},
        {id: "基本范式与发展", level: 4, color: "#fdf2f8", size: 8},
        {id: "互联网时代", level: 4, color: "#fdf2f8", size: 8},
        {id: "人工智能时代", level: 4, color: "#fdf2f8", size: 8},
        {id: "编程语言的分类", level: 3, color: "#fbcfe8", size: 10},
        {id: "机器语言", level: 4, color: "#fdf2f8", size: 8},
        {id: "汇编语言", level: 4, color: "#fdf2f8", size: 8},
        {id: "高级语言", level: 4, color: "#fdf2f8", size: 8},
        {id: "编译型语言", level: 5, color: "#fef7f7", size: 6},
        {id: "解释型语言", level: 5, color: "#fef7f7", size: 6},
        {id: "面向过程语言", level: 5, color: "#fef7f7", size: 6},
        {id: "面向对象语言", level: 5, color: "#fef7f7", size: 6},
        {id: "自然语言提示词", level: 4, color: "#fdf2f8", size: 8},
        {id: "2-2 编程的基本规则", level: 2, color: "#f472b6", size: 14},
        {id: "编程的基本方法", level: 3, color: "#fbcfe8", size: 10},
        {id: "编程的工具", level: 4, color: "#fdf2f8", size: 8},
        {id: "IDE的安装与配置", level: 4, color: "#fdf2f8", size: 8},
        {id: "LLM生成代码", level: 4, color: "#fdf2f8", size: 8},
        {id: "AI插件安装", level: 4, color: "#fdf2f8", size: 8},
        {id: "编写执行第一个程序", level: 4, color: "#fdf2f8", size: 8},
        {id: "Hello,World！", level: 4, color: "#fdf2f8", size: 8},
        {id: "变量与数据类型", level: 3, color: "#fbcfe8", size: 10},
        {id: "变量", level: 4, color: "#fdf2f8", size: 8},
        {id: "数据类型", level: 4, color: "#fdf2f8", size: 8},
        {id: "数字", level: 4, color: "#fdf2f8", size: 8},
        {id: "字符串", level: 4, color: "#fdf2f8", size: 8},
        {id: "列表", level: 4, color: "#fdf2f8", size: 8},
        {id: "元组", level: 4, color: "#fdf2f8", size: 8},
        {id: "集合", level: 4, color: "#fdf2f8", size: 8},
        {id: "字典", level: 4, color: "#fdf2f8", size: 8},
        {id: "数据类型之间的转换", level: 4, color: "#fdf2f8", size: 8},
        {id: "语句与流程控制", level: 3, color: "#fbcfe8", size: 10},
        {id: "语句与缩进", level: 4, color: "#fdf2f8", size: 8},
        {id: "顺序执行语句", level: 4, color: "#fdf2f8", size: 8},
        {id: "布尔逻辑", level: 4, color: "#fdf2f8", size: 8},
        {id: "分支语句", level: 4, color: "#fdf2f8", size: 8},
        {id: "循环语句", level: 4, color: "#fdf2f8", size: 8},
        {id: "2-3 编程语言的结构与交互", level: 2, color: "#f472b6", size: 14},
        {id: "运算符", level: 3, color: "#fbcfe8", size: 10},
        {id: "算数运算符", level: 4, color: "#fdf2f8", size: 8},
        {id: "比较运算符", level: 4, color: "#fdf2f8", size: 8},
        {id: "逻辑运算符", level: 4, color: "#fdf2f8", size: 8},
        {id: "位运算符", level: 4, color: "#fdf2f8", size: 8},
        {id: "赋值运算符", level: 4, color: "#fdf2f8", size: 8},
        {id: "特殊运算符", level: 4, color: "#fdf2f8", size: 8},
        {id: "函数与调用", level: 3, color: "#fbcfe8", size: 10},
        {id: "Python内建函数", level: 4, color: "#fdf2f8", size: 8},
        {id: "函数的形式和使用方式", level: 4, color: "#fdf2f8", size: 8},
        {id: "返回值", level: 4, color: "#fdf2f8", size: 8},
        {id: "作用范围", level: 4, color: "#fdf2f8", size: 8},
        {id: "用户自定义函数", level: 4, color: "#fdf2f8", size: 8},
        {id: "模块、包与导入", level: 3, color: "#fbcfe8", size: 10},
        {id: "模块", level: 4, color: "#fdf2f8", size: 8},
        {id: "包", level: 4, color: "#fdf2f8", size: 8},
        {id: "输入输出", level: 3, color: "#fbcfe8", size: 10},
        {id: "标准输出与格式化", level: 4, color: "#fdf2f8", size: 8},
        {id: "标准输入", level: 4, color: "#fdf2f8", size: 8},
        {id: "2-4 编写一段Python程序", level: 2, color: "#f472b6", size: 14},
        {id: "文件与目录", level: 3, color: "#fbcfe8", size: 10},
        {id: "文件操作的一般顺序", level: 4, color: "#fdf2f8", size: 8},
        {id: "打开文件", level: 5, color: "#fef7f7", size: 6},
        {id: "读文件", level: 5, color: "#fef7f7", size: 6},
        {id: "写文件", level: 5, color: "#fef7f7", size: 6},
        {id: "关闭文件", level: 5, color: "#fef7f7", size: 6},
        {id: "操作目录的常用方法", level: 4, color: "#fdf2f8", size: 8},
        {id: "Python实例", level: 3, color: "#fbcfe8", size: 10},
        {id: "第3章 数据间的逻辑关系", level: 1, color: "#f59e0b", size: 18},
        {id: "3-1 认识数据间的逻辑关系", level: 2, color: "#fbbf24", size: 14},
        {id: "数据间的逻辑关系", level: 3, color: "#fde68a", size: 10},
        {id: "什么是数据结构", level: 3, color: "#fde68a", size: 10},
        {id: "数据结构与算法", level: 3, color: "#fde68a", size: 10},
        {id: "数据结构的分类", level: 3, color: "#fde68a", size: 10},
        {id: "3-2 线性数据结构", level: 2, color: "#fbbf24", size: 14},
        {id: "数组", level: 3, color: "#fde68a", size: 10},
        {id: "堆栈", level: 3, color: "#fde68a", size: 10},
        {id: "堆栈的工作原理", level: 4, color: "#fef3c7", size: 8},
        {id: "堆栈的操作", level: 4, color: "#fef3c7", size: 8},
        {id: "堆栈的特性", level: 4, color: "#fef3c7", size: 8},
        {id: "堆栈的应用举例", level: 4, color: "#fef3c7", size: 8},
        {id: "队列", level: 3, color: "#fde68a", size: 10},
        {id: "队列的工作原理", level: 4, color: "#fef3c7", size: 8},
        {id: "队列的操作", level: 4, color: "#fef3c7", size: 8},
        {id: "队列的特性", level: 4, color: "#fef3c7", size: 8},
        {id: "队列的应用举例", level: 4, color: "#fef3c7", size: 8},
        {id: "链表", level: 3, color: "#fde68a", size: 10},
        {id: "链表的工作原理", level: 4, color: "#fef3c7", size: 8},
        {id: "链表的操作", level: 4, color: "#fef3c7", size: 8},
        {id: "3-3 非线性数据结构", level: 2, color: "#fbbf24", size: 14},
        {id: "什么是非线性数据结构", level: 3, color: "#fde68a", size: 10},
        {id: "树", level: 3, color: "#fde68a", size: 10},
        {id: "树的定义", level: 4, color: "#fef3c7", size: 8},
        {id: "节点", level: 5, color: "#fffbeb", size: 6},
        {id: "根", level: 5, color: "#fffbeb", size: 6},
        {id: "边", level: 5, color: "#fffbeb", size: 6},
        {id: "度", level: 5, color: "#fffbeb", size: 6},
        {id: "父节点", level: 5, color: "#fffbeb", size: 6},
        {id: "子节点", level: 5, color: "#fffbeb", size: 6},
        {id: "叶子节点", level: 5, color: "#fffbeb", size: 6},
        {id: "子树", level: 5, color: "#fffbeb", size: 6},
        {id: "深度/高度", level: 5, color: "#fffbeb", size: 6},
        {id: "层次化的思想", level: 5, color: "#fffbeb", size: 6},
        {id: "二叉树", level: 4, color: "#fef3c7", size: 8},
        {id: "二叉树的基本操作", level: 5, color: "#fffbeb", size: 6},
        {id: "二叉树的遍历", level: 5, color: "#fffbeb", size: 6},
        {id: "递归的思想", level: 5, color: "#fffbeb", size: 6},
        {id: "二叉树的操作举例", level: 5, color: "#fffbeb", size: 6},
        {id: "树的应用举例", level: 4, color: "#fef3c7", size: 8},
        {id: "图", level: 3, color: "#fde68a", size: 10},
        {id: "图的定义", level: 4, color: "#fef3c7", size: 8},
        {id: "顶点", level: 5, color: "#fffbeb", size: 6},
        {id: "边", level: 5, color: "#fffbeb", size: 6},
        {id: "抽象显示生活中的问题", level: 5, color: "#fffbeb", size: 6},
        {id: "图的表示", level: 4, color: "#fef3c7", size: 8},
        {id: "邻接矩阵", level: 5, color: "#fffbeb", size: 6},
        {id: "邻接表", level: 5, color: "#fffbeb", size: 6},
        {id: "图的实现", level: 4, color: "#fef3c7", size: 8},
        {id: "图的应用举例", level: 4, color: "#fef3c7", size: 8},
        {id: "第4章 用计算思维求解问题", level: 1, color: "#10b981", size: 18},
        {id: "4-1 计算机求解复杂问题", level: 2, color: "#34d399", size: 14},
        {id: "问题求解的一般方法", level: 3, color: "#a7f3d0", size: 10},
        {id: "问题分解", level: 4, color: "#d1fae5", size: 8},
        {id: "模式识别", level: 4, color: "#d1fae5", size: 8},
        {id: "问题抽象", level: 4, color: "#d1fae5", size: 8},
        {id: "算法设计", level: 4, color: "#d1fae5", size: 8},
        {id: "复杂问题求解的示例", level: 3, color: "#a7f3d0", size: 10},
        {id: "计算最短路径", level: 4, color: "#d1fae5", size: 8},
        {id: "算法是什么", level: 3, color: "#a7f3d0", size: 10},
        {id: "伪代码与流程图", level: 4, color: "#d1fae5", size: 8},
        {id: "好算法具有的品质", level: 4, color: "#d1fae5", size: 8},
        {id: "使用数据结构和算法使代码可扩展", level: 4, color: "#d1fae5", size: 8},
        {id: "4-2 查找特定的数据", level: 2, color: "#34d399", size: 14},
        {id: "问题概述", level: 3, color: "#a7f3d0", size: 10},
        {id: "顺序查找", level: 3, color: "#a7f3d0", size: 10},
        {id: "二分查找", level: 3, color: "#a7f3d0", size: 10},
        {id: "算法思想", level: 4, color: "#d1fae5", size: 8},
        {id: "算法实现", level: 4, color: "#d1fae5", size: 8},
        {id: "算法效率", level: 4, color: "#d1fae5", size: 8},
        {id: "4-3 快速得到有序的数据", level: 2, color: "#34d399", size: 14},
        {id: "选择排序", level: 3, color: "#a7f3d0", size: 10},
        {id: "选择-算法思想", level: 4, color: "#d1fae5", size: 8},
        {id: "选择-算法过程", level: 4, color: "#d1fae5", size: 8},
        {id: "选择-算法实现", level: 4, color: "#d1fae5", size: 8},
        {id: "选择-算法效率", level: 4, color: "#d1fae5", size: 8},
        {id: "快速排序", level: 3, color: "#a7f3d0", size: 10},
        {id: "快速-算法思想", level: 4, color: "#d1fae5", size: 8},
        {id: "分治法", level: 4, color: "#d1fae5", size: 8},
        {id: "快速-算法过程", level: 4, color: "#d1fae5", size: 8},
        {id: "快速-算法效率", level: 4, color: "#d1fae5", size: 8},
        {id: "第5章 信息如何在互联网上传播", level: 1, color: "#ef4444", size: 18},
        {id: "5-1 互联网的出现与发展", level: 2, color: "#f87171", size: 14},
        {id: "计算机网络出现的背景", level: 3, color: "#fca5a5", size: 10},
        {id: "计算机的出现", level: 4, color: "#fee2e2", size: 8},
        {id: "计算机的普及与多样化", level: 4, color: "#fee2e2", size: 8},
        {id: "互联网的历史", level: 3, color: "#fca5a5", size: 10},
        {id: "ARPAnet为标志的起源", level: 4, color: "#fee2e2", size: 8},
        {id: "专用网络和网络开始互联", level: 4, color: "#fee2e2", size: 8},
        {id: "5-2 互联网的架构与运行方式", level: 2, color: "#f87171", size: 14},
        {id: "互联网的构成", level: 3, color: "#fca5a5", size: 10},
        {id: "边缘部分", level: 4, color: "#fee2e2", size: 8},
        {id: "核心部分", level: 4, color: "#fee2e2", size: 8},
        {id: "分组交换", level: 4, color: "#fee2e2", size: 8},
        {id: "OSI模型与分层设计思想", level: 3, color: "#fca5a5", size: 10},
        {id: "互联网协议套件TCP/IP", level: 3, color: "#fca5a5", size: 10},
        {id: "应用层", level: 4, color: "#fee2e2", size: 8},
        {id: "传输层", level: 4, color: "#fee2e2", size: 8},
        {id: "网络层", level: 4, color: "#fee2e2", size: 8},
        {id: "网络接口层", level: 4, color: "#fee2e2", size: 8},
        {id: "IP协议", level: 4, color: "#fee2e2", size: 8},
        {id: "IPv4地址", level: 5, color: "#fef2f2", size: 6},
        {id: "IPv6地址", level: 5, color: "#fef2f2", size: 6},
        {id: "5-3 一次完整的计算机数据传输", level: 2, color: "#f87171", size: 14},
        {id: "数据打包与传输的真实过程", level: 3, color: "#fca5a5", size: 10},
        {id: "互联网应用程序的工作方式", level: 3, color: "#fca5a5", size: 10},
        {id: "客户服务器模式（C/S）", level: 4, color: "#fee2e2", size: 8},
        {id: "域名系统DNS", level: 3, color: "#fca5a5", size: 10},
        {id: "层次结构的域名", level: 4, color: "#fee2e2", size: 8},
        {id: "根域名服务器", level: 4, color: "#fee2e2", size: 8},
        {id: "DNS查询过程", level: 4, color: "#fee2e2", size: 8},
        {id: "WWW万维网", level: 4, color: "#fee2e2", size: 8},
        {id: "5-4 面对攻击的网络", level: 2, color: "#f87171", size: 14},
        {id: "坏家伙们攻击网络的方法", level: 3, color: "#fca5a5", size: 10},
        {id: "恶意软件", level: 4, color: "#fee2e2", size: 8},
        {id: "拒绝服务攻击", level: 4, color: "#fee2e2", size: 8},
        {id: "保护网络安全的方法", level: 3, color: "#fca5a5", size: 10},
        {id: "加密与身份认证", level: 4, color: "#fee2e2", size: 8},
        {id: "对称加密", level: 5, color: "#fef2f2", size: 6},
        {id: "非对称加密", level: 5, color: "#fef2f2", size: 6},
        {id: "防火墙", level: 4, color: "#fee2e2", size: 8},
    ],
    links: [
        {source: "计算思维概论", target: "第1章 信息的存储与表示"},
        {source: "计算思维概论", target: "第2章 计算设备处理信息"},
        {source: "计算思维概论", target: "第3章 数据间的逻辑关系"},
        {source: "计算思维概论", target: "第4章 用计算思维求解问题"},
        {source: "计算思维概论", target: "第5章 信息如何在互联网上传播"},
        {source: "第1章 信息的存储与表示", target: "1-0 课程简介"},
        {source: "1-0 课程简介", target: "计算思维的概念"},
        {source: "第1章 信息的存储与表示", target: "1-1 信息存储和表示的基础"},
        {source: "1-1 信息存储和表示的基础", target: "计算机硬件"},
        {source: "计算机硬件", target: "冯诺依曼结构"},
        {source: "冯诺依曼结构", target: "输入设备"},
        {source: "冯诺依曼结构", target: "输出设备"},
        {source: "冯诺依曼结构", target: "控制器"},
        {source: "冯诺依曼结构", target: "运算器"},
        {source: "冯诺依曼结构", target: "存储器"},
        {source: "1-1 信息存储和表示的基础", target: "计算机软件"},
        {source: "计算机软件", target: "操作系统"},
        {source: "计算机软件", target: "设备驱动程序"},
        {source: "计算机软件", target: "应用软件"},
        {source: "1-1 信息存储和表示的基础", target: "二进制"},
        {source: "二进制", target: "二进制的概念"},
        {source: "二进制", target: "进制转换"},
        {source: "进制转换", target: "十进制"},
        {source: "进制转换", target: "十六进制"},
        {source: "第1章 信息的存储与表示", target: "1-2 数值的表示"},
        {source: "1-2 数值的表示", target: "原码表示法"},
        {source: "1-2 数值的表示", target: "补码"},
        {source: "第1章 信息的存储与表示", target: "1-3 文本的表示"},
        {source: "1-3 文本的表示", target: "为什么要进行字符编码"},
        {source: "1-3 文本的表示", target: "ASCII"},
        {source: "1-3 文本的表示", target: "扩展ASCII"},
        {source: "1-3 文本的表示", target: "GBK字符集及编码方式"},
        {source: "1-3 文本的表示", target: "Unicode编码与UTF-8"},
        {source: "第1章 信息的存储与表示", target: "1-4 音频的表示"},
        {source: "1-4 音频的表示", target: "模拟信号"},
        {source: "1-4 音频的表示", target: "数字信号"},
        {source: "1-4 音频的表示", target: "模拟信号到数字信号的转换"},
        {source: "1-4 音频的表示", target: "音频编码与压缩"},
        {source: "第1章 信息的存储与表示", target: "1-5 图像的表示"},
        {source: "1-5 图像的表示", target: "图像的数字化"},
        {source: "1-5 图像的表示", target: "图像的颜色"},
        {source: "图像的颜色", target: "单色图像"},
        {source: "图像的颜色", target: "灰度图像"},
        {source: "图像的颜色", target: "彩色图像"},
        {source: "1-5 图像的表示", target: "图像编码"},
        {source: "1-5 图像的表示", target: "常见的图像格式"},
        {source: "第1章 信息的存储与表示", target: "1-6 视频的表示"},
        {source: "1-6 视频的表示", target: "视频与图像的不同"},
        {source: "1-6 视频的表示", target: "视频编码"},
        {source: "第2章 计算设备处理信息", target: "2-1 编程语言是什么"},
        {source: "2-1 编程语言是什么", target: "为什么需要编程语言"},
        {source: "2-1 编程语言是什么", target: "什么是编程语言"},
        {source: "什么是编程语言", target: "编程语言的概念"},
        {source: "什么是编程语言", target: "语法"},
        {source: "什么是编程语言", target: "语义"},
        {source: "2-1 编程语言是什么", target: "编程语言的历史"},
        {source: "编程语言的历史", target: "早期历史"},
        {source: "编程语言的历史", target: "第一批编程语言"},
        {source: "编程语言的历史", target: "基本范式与发展"},
        {source: "编程语言的历史", target: "互联网时代"},
        {source: "编程语言的历史", target: "人工智能时代"},
        {source: "2-1 编程语言是什么", target: "编程语言的分类"},
        {source: "编程语言的分类", target: "机器语言"},
        {source: "编程语言的分类", target: "汇编语言"},
        {source: "编程语言的分类", target: "高级语言"},
        {source: "高级语言", target: "编译型语言"},
        {source: "高级语言", target: "解释型语言"},
        {source: "高级语言", target: "面向过程语言"},
        {source: "高级语言", target: "面向对象语言"},
        {source: "编程语言的分类", target: "自然语言提示词"},
        {source: "第2章 计算设备处理信息", target: "2-2 编程的基本规则"},
        {source: "2-2 编程的基本规则", target: "编程的基本方法"},
        {source: "编程的基本方法", target: "编程的工具"},
        {source: "编程的基本方法", target: "IDE的安装与配置"},
        {source: "编程的基本方法", target: "LLM生成代码"},
        {source: "编程的基本方法", target: "AI插件安装"},
        {source: "编程的基本方法", target: "编写执行第一个程序"},
        {source: "编程的基本方法", target: "Hello,World！"},
        {source: "2-2 编程的基本规则", target: "变量与数据类型"},
        {source: "变量与数据类型", target: "变量"},
        {source: "变量与数据类型", target: "数据类型"},
        {source: "变量与数据类型", target: "数字"},
        {source: "变量与数据类型", target: "字符串"},
        {source: "变量与数据类型", target: "列表"},
        {source: "变量与数据类型", target: "元组"},
        {source: "变量与数据类型", target: "集合"},
        {source: "变量与数据类型", target: "字典"},
        {source: "变量与数据类型", target: "数据类型之间的转换"},
        {source: "2-2 编程的基本规则", target: "语句与流程控制"},
        {source: "语句与流程控制", target: "语句与缩进"},
        {source: "语句与流程控制", target: "顺序执行语句"},
        {source: "语句与流程控制", target: "布尔逻辑"},
        {source: "语句与流程控制", target: "分支语句"},
        {source: "语句与流程控制", target: "循环语句"},
        {source: "第2章 计算设备处理信息", target: "2-3 编程语言的结构与交互"},
        {source: "2-3 编程语言的结构与交互", target: "运算符"},
        {source: "运算符", target: "算数运算符"},
        {source: "运算符", target: "比较运算符"},
        {source: "运算符", target: "逻辑运算符"},
        {source: "运算符", target: "位运算符"},
        {source: "运算符", target: "赋值运算符"},
        {source: "运算符", target: "特殊运算符"},
        {source: "2-3 编程语言的结构与交互", target: "函数与调用"},
        {source: "函数与调用", target: "Python内建函数"},
        {source: "函数与调用", target: "函数的形式和使用方式"},
        {source: "函数与调用", target: "返回值"},
        {source: "函数与调用", target: "作用范围"},
        {source: "函数与调用", target: "用户自定义函数"},
        {source: "2-3 编程语言的结构与交互", target: "模块、包与导入"},
        {source: "模块、包与导入", target: "模块"},
        {source: "模块、包与导入", target: "包"},
        {source: "2-3 编程语言的结构与交互", target: "输入输出"},
        {source: "输入输出", target: "标准输出与格式化"},
        {source: "输入输出", target: "标准输入"},
        {source: "第2章 计算设备处理信息", target: "2-4 编写一段Python程序"},
        {source: "2-4 编写一段Python程序", target: "文件与目录"},
        {source: "文件与目录", target: "文件操作的一般顺序"},
        {source: "文件操作的一般顺序", target: "打开文件"},
        {source: "文件操作的一般顺序", target: "读文件"},
        {source: "文件操作的一般顺序", target: "写文件"},
        {source: "文件操作的一般顺序", target: "关闭文件"},
        {source: "文件与目录", target: "操作目录的常用方法"},
        {source: "2-4 编写一段Python程序", target: "Python实例"},
        {source: "第3章 数据间的逻辑关系", target: "3-1 认识数据间的逻辑关系"},
        {source: "3-1 认识数据间的逻辑关系", target: "数据间的逻辑关系"},
        {source: "3-1 认识数据间的逻辑关系", target: "什么是数据结构"},
        {source: "3-1 认识数据间的逻辑关系", target: "数据结构与算法"},
        {source: "3-1 认识数据间的逻辑关系", target: "数据结构的分类"},
        {source: "第3章 数据间的逻辑关系", target: "3-2 线性数据结构"},
        {source: "3-2 线性数据结构", target: "数组"},
        {source: "3-2 线性数据结构", target: "堆栈"},
        {source: "堆栈", target: "堆栈的工作原理"},
        {source: "堆栈", target: "堆栈的操作"},
        {source: "堆栈", target: "堆栈的特性"},
        {source: "堆栈", target: "堆栈的应用举例"},
        {source: "3-2 线性数据结构", target: "队列"},
        {source: "队列", target: "队列的工作原理"},
        {source: "队列", target: "队列的操作"},
        {source: "队列", target: "队列的特性"},
        {source: "队列", target: "队列的应用举例"},
        {source: "3-2 线性数据结构", target: "链表"},
        {source: "链表", target: "链表的工作原理"},
        {source: "链表", target: "链表的操作"},
        {source: "第3章 数据间的逻辑关系", target: "3-3 非线性数据结构"},
        {source: "3-3 非线性数据结构", target: "什么是非线性数据结构"},
        {source: "3-3 非线性数据结构", target: "树"},
        {source: "树", target: "树的定义"},
        {source: "树的定义", target: "节点"},
        {source: "树的定义", target: "根"},
        {source: "树的定义", target: "边"},
        {source: "树的定义", target: "度"},
        {source: "树的定义", target: "父节点"},
        {source: "树的定义", target: "子节点"},
        {source: "树的定义", target: "叶子节点"},
        {source: "树的定义", target: "子树"},
        {source: "树的定义", target: "深度/高度"},
        {source: "树的定义", target: "层次化的思想"},
        {source: "树", target: "二叉树"},
        {source: "二叉树", target: "二叉树的基本操作"},
        {source: "二叉树", target: "二叉树的遍历"},
        {source: "二叉树", target: "递归的思想"},
        {source: "二叉树", target: "二叉树的操作举例"},
        {source: "树", target: "树的应用举例"},
        {source: "3-3 非线性数据结构", target: "图"},
        {source: "图", target: "图的定义"},
        {source: "图的定义", target: "顶点"},
        {source: "图的定义", target: "边"},
        {source: "图的定义", target: "抽象显示生活中的问题"},
        {source: "图", target: "图的表示"},
        {source: "图的表示", target: "邻接矩阵"},
        {source: "图的表示", target: "邻接表"},
        {source: "图", target: "图的实现"},
        {source: "图", target: "图的应用举例"},
        {source: "第4章 用计算思维求解问题", target: "4-1 计算机求解复杂问题"},
        {source: "4-1 计算机求解复杂问题", target: "问题求解的一般方法"},
        {source: "问题求解的一般方法", target: "问题分解"},
        {source: "问题求解的一般方法", target: "模式识别"},
        {source: "问题求解的一般方法", target: "问题抽象"},
        {source: "问题求解的一般方法", target: "算法设计"},
        {source: "4-1 计算机求解复杂问题", target: "复杂问题求解的示例"},
        {source: "复杂问题求解的示例", target: "计算最短路径"},
        {source: "4-1 计算机求解复杂问题", target: "算法是什么"},
        {source: "算法是什么", target: "伪代码与流程图"},
        {source: "算法是什么", target: "好算法具有的品质"},
        {source: "算法是什么", target: "使用数据结构和算法使代码可扩展"},
        {source: "第4章 用计算思维求解问题", target: "4-2 查找特定的数据"},
        {source: "4-2 查找特定的数据", target: "问题概述"},
        {source: "4-2 查找特定的数据", target: "顺序查找"},
        {source: "4-2 查找特定的数据", target: "二分查找"},
        {source: "二分查找", target: "算法思想"},
        {source: "二分查找", target: "算法实现"},
        {source: "二分查找", target: "算法效率"},
        {source: "第4章 用计算思维求解问题", target: "4-3 快速得到有序的数据"},
        {source: "4-3 快速得到有序的数据", target: "选择排序"},
        {source: "选择排序", target: "选择-算法思想"},
        {source: "选择排序", target: "选择-算法过程"},
        {source: "选择排序", target: "选择-算法实现"},
        {source: "选择排序", target: "选择-算法效率"},
        {source: "4-3 快速得到有序的数据", target: "快速排序"},
        {source: "快速排序", target: "快速-算法思想"},
        {source: "快速排序", target: "分治法"},
        {source: "快速排序", target: "快速-算法过程"},
        {source: "快速排序", target: "快速-算法效率"},
        {source: "第5章 信息如何在互联网上传播", target: "5-1 互联网的出现与发展"},
        {source: "5-1 互联网的出现与发展", target: "计算机网络出现的背景"},
        {source: "计算机网络出现的背景", target: "计算机的出现"},
        {source: "计算机网络出现的背景", target: "计算机的普及与多样化"},
        {source: "5-1 互联网的出现与发展", target: "互联网的历史"},
        {source: "互联网的历史", target: "ARPAnet为标志的起源"},
        {source: "互联网的历史", target: "专用网络和网络开始互联"},
        {source: "第5章 信息如何在互联网上传播", target: "5-2 互联网的架构与运行方式"},
        {source: "5-2 互联网的架构与运行方式", target: "互联网的构成"},
        {source: "互联网的构成", target: "边缘部分"},
        {source: "互联网的构成", target: "核心部分"},
        {source: "互联网的构成", target: "分组交换"},
        {source: "5-2 互联网的架构与运行方式", target: "OSI模型与分层设计思想"},
        {source: "5-2 互联网的架构与运行方式", target: "互联网协议套件TCP/IP"},
        {source: "互联网协议套件TCP/IP", target: "应用层"},
        {source: "互联网协议套件TCP/IP", target: "传输层"},
        {source: "互联网协议套件TCP/IP", target: "网络层"},
        {source: "互联网协议套件TCP/IP", target: "网络接口层"},
        {source: "互联网协议套件TCP/IP", target: "IP协议"},
        {source: "IP协议", target: "IPv4地址"},
        {source: "IP协议", target: "IPv6地址"},
        {source: "第5章 信息如何在互联网上传播", target: "5-3 一次完整的计算机数据传输"},
        {source: "5-3 一次完整的计算机数据传输", target: "数据打包与传输的真实过程"},
        {source: "5-3 一次完整的计算机数据传输", target: "互联网应用程序的工作方式"},
        {source: "互联网应用程序的工作方式", target: "客户服务器模式（C/S）"},
        {source: "5-3 一次完整的计算机数据传输", target: "域名系统DNS"},
        {source: "域名系统DNS", target: "层次结构的域名"},
        {source: "域名系统DNS", target: "根域名服务器"},
        {source: "域名系统DNS", target: "DNS查询过程"},
        {source: "5-3 一次完整的计算机数据传输", target: "WWW万维网"},
        {source: "第5章 信息如何在互联网上传播", target: "5-4 面对攻击的网络"},
        {source: "5-4 面对攻击的网络", target: "坏家伙们攻击网络的方法"},
        {source: "坏家伙们攻击网络的方法", target: "恶意软件"},
        {source: "坏家伙们攻击网络的方法", target: "拒绝服务攻击"},
        {source: "5-4 面对攻击的网络", target: "保护网络安全的方法"},
        {source: "保护网络安全的方法", target: "加密与身份认证"},
        {source: "加密与身份认证", target: "对称加密"},
        {source: "加密与身份认证", target: "非对称加密"},
        {source: "保护网络安全的方法", target: "防火墙"},
    ]
};

const width = document.getElementById('graphContainer').clientWidth;
const height = 700;

const svg = d3.select("#graphContainer").append("svg")
    .attr("width", width)
    .attr("height", height)
    .call(d3.zoom().scaleExtent([0.1, 4]).on("zoom", zoomed));

const g = svg.append("g");

let transform = d3.zoomIdentity;

const simulation = d3.forceSimulation(knowledgeData.nodes)
    .force("link", d3.forceLink(knowledgeData.links).id(d => d.id).distance(100))
    .force("charge", d3.forceManyBody().strength(-300))
    .force("center", d3.forceCenter(width / 2, height / 2));

const link = g.append("g").selectAll("line").data(knowledgeData.links).join("line").attr("class", "link");

const node = g.append("g").selectAll("circle").data(knowledgeData.nodes).join("circle").attr("class", "node").attr("r", d => d.size).attr("fill", d => d.color).call(d3.drag().on("start", dragstarted).on("drag", dragged).on("end", dragended));

const label = g.append("g").selectAll("text").data(knowledgeData.nodes).join("text").attr("class", "node-label").text(d => d.id);

function zoomed(event) {
    transform = event.transform;
    g.attr("transform", transform);
}

simulation.on("tick", () => {
    link.attr("x1", d => d.source.x).attr("y1", d => d.source.y)
        .attr("x2", d => d.target.x).attr("y2", d => d.target.y);
    node.attr("cx", d => d.x).attr("cy", d => d.y);
    label.attr("x", d => d.x)
        .attr("y", d => d.y + (d.level === 0 ? 35 : d.level === 1 ? 28 : d.level === 2 ? 22 : d.level === 3 ? 18 : d.level === 4 ? 15 : 12))
        .attr("text-anchor", "middle");
});

function dragstarted(event) {
    if (!event.active) simulation.alphaTarget(0.3).restart();
    event.subject.fx = transform.invertX(event.x);
    event.subject.fy = transform.invertY(event.y);
}

function dragged(event) {
    event.subject.fx = transform.invertX(event.x);
    event.subject.fy = transform.invertY(event.y);
}

function dragended(event) {
    if (!event.active) simulation.alphaTarget(0);
    event.subject.fx = null;
    event.subject.fy = null;
}

document.getElementById('resetBtn')?.addEventListener('click', () => {
    knowledgeData.nodes.forEach(d => { d.fx = null; d.fy = null; });
    simulation.alpha(1).restart();
    
    svg.transition()
        .duration(750)
        .call(d3.zoom().transform, d3.zoomIdentity);
});

document.getElementById('centerBtn')?.addEventListener('click', () => {
    simulation.force("center", d3.forceCenter(width / 2, height / 2)).restart();
    
    const bounds = g.node().getBBox();
    const dx = bounds.x + bounds.width / 2 - width / 2;
    const dy = bounds.y + bounds.height / 2 - height / 2;
    const scale = Math.min(0.9, 0.9 * Math.min(width / bounds.width, height / bounds.height));
    
    svg.transition()
        .duration(750)
        .call(d3.zoom().transform, d3.zoomIdentity.translate(-dx, -dy).scale(scale));
});
